
import java.awt.Desktop;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;


public class Application extends javax.swing.JFrame {

        
    private Analizador a;
    
    /**
     * Creates new form Application
     */
    public Application() {
        initComponents();
        a = new Analizador(ProgressBar);
        FileChooser.setCurrentDirectory(new File("./"));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        arquivoBtn = new javax.swing.JButton();
        nomeArquivo1 = new javax.swing.JLabel();
        selecionarDIrBtn = new javax.swing.JButton();
        calcularBtn = new javax.swing.JButton();
        diretorio = new javax.swing.JLabel();
        ProgressBar = new javax.swing.JProgressBar();

        FileChooser.setCurrentDirectory(new java.io.File("C:\\Program Files\\NetBeans 8.0.2"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Farejador JAVA");

        arquivoBtn.setText("Selecionar Arquivo");
        arquivoBtn.setToolTipText("Selecione o primeiro arquivo");
        arquivoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arquivoBtnActionPerformed(evt);
            }
        });

        selecionarDIrBtn.setText("Selecionar Diretório");
        selecionarDIrBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarDIrBtnActionPerformed(evt);
            }
        });

        calcularBtn.setText("Calcular");
        calcularBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularBtnActionPerformed(evt);
            }
        });

        ProgressBar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ProgressBarStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(selecionarDIrBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(arquivoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(calcularBtn))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(diretorio, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                        .addComponent(nomeArquivo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeArquivo1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arquivoBtn))
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selecionarDIrBtn)
                    .addComponent(diretorio, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(calcularBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void arquivoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arquivoBtnActionPerformed
        FileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        int i= FileChooser.showSaveDialog(null);
        if (i==1){
            nomeArquivo1.setText("");
        }else {
            File arquivo = FileChooser.getSelectedFile();
            nomeArquivo1.setText(arquivo.getPath());
        }
        
    }//GEN-LAST:event_arquivoBtnActionPerformed

    private void calcularBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularBtnActionPerformed
        ProgressBar.setValue(0);
        a.SetQtdFiles(0);
        
        //a.analityc(nomeArquivo1.getText(), );
        
        if(nomeArquivo1.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Você precisa selecionar o primeiro arquivo!");
            return;
        }
        
        if(diretorio.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Você precisa selecionar um diretório!");
            return;
        }
        
        Thread td = new Thread( () -> {
            a.countFiles(diretorio.getText());
            ProgressBar.setMaximum(a.GetQtdFiles());
            a.analitycRecursive(nomeArquivo1.getText(), diretorio.getText());
        });
        
        td.start();
        ProgressBar.setMaximum(a.GetQtdFiles());
    }//GEN-LAST:event_calcularBtnActionPerformed

    private void selecionarDIrBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarDIrBtnActionPerformed
        FileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int i= FileChooser.showSaveDialog(null);
        if (i==1){
            diretorio.setText("");
        }else {
            File arquivo = FileChooser.getSelectedFile();
            diretorio.setText(arquivo.getPath());
        }
    }//GEN-LAST:event_selecionarDIrBtnActionPerformed

    private void ProgressBarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ProgressBarStateChanged
      
        if(ProgressBar.getValue() == a.GetQtdFiles() && ProgressBar.getValue() != 0){
            ProgressBar.setValue(0);
            
            if(Desktop.isDesktopSupported()){
                try {
                    File relatorio = new File("relatorio.html");
                    String url = relatorio.getAbsolutePath().replace("\\", "/");
                    Desktop.getDesktop().browse(new URI("file:///"+url));
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Concluído, relatório gerado com sucesso!");
                } catch (URISyntaxException ex) {
                    System.out.println("URISyntaxException = " + ex.getMessage());
                }
            }
            else{
               JOptionPane.showMessageDialog(null, "Concluído, relatório gerado com sucesso!"); 
            }
        }
    }//GEN-LAST:event_ProgressBarStateChanged

    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JButton arquivoBtn;
    private javax.swing.JButton calcularBtn;
    private javax.swing.JLabel diretorio;
    private javax.swing.JLabel nomeArquivo1;
    private javax.swing.JButton selecionarDIrBtn;
    // End of variables declaration//GEN-END:variables
}
